<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plcProject caseSensitive="true" useCustomWorkspace="true" debugMode="false" extcheck="true" SFCControl="false" strictPointerCheck="false" copyWarningThreshold="200" version="2.2" useLD2="true" useFBMethods="false">
	<image>SensitSTH102.imgx</image>
	<commSettings>ModbusTCP:255,1000,M#TCPIP:192.168.0.181/502,5000</commSettings>
	<sources>
		<main>
			<resources/>
			<tasks>
				<task name="Back">
					<program>STH102Acquisition</program>
				</task>
			</tasks>
			<globalVars/>
			<retainVars/>
			<constantVars/>
			<functions/>
			<functionBlocks>
				<functionBlock name="ModbusMaster" version="1.0.0">
					<descr>(eLLabUtyLib_C050) Manages the modbus master communication</descr>
					<vars>
						<inputVars>
							<var name="Enable" type="BOOL">
								<descr>FB enable</descr>
							</var>
							<var name="SpyOn" type="BOOL">
								<descr>Spy active</descr>
							</var>
							<var name="File" type="FILEP">
								<descr>Terminal I/O pointer</descr>
							</var>
							<var name="Type" type="USINT">
								<descr>Modbus type</descr>
							</var>
							<var name="Node" type="USINT">
								<descr>Node number</descr>
							</var>
							<var name="FCode" type="USINT">
								<descr>Function code</descr>
							</var>
							<var name="Address" type="UINT">
								<descr>Start address</descr>
							</var>
							<var name="Points" type="UDINT">
								<descr>Number of points (Accept SIZEOF)</descr>
							</var>
							<var name="Buffer" type="@USINT">
								<descr>Address of data buffer</descr>
							</var>
							<var name="IFTime" type="UDINT">
								<descr>Interframe time (uS)</descr>
							</var>
							<var name="Timeout" type="UINT">
								<descr>Timeout time (mS)</descr>
							</var>
							<var name="Delay" type="UINT">
								<descr>Delay time (mS)</descr>
							</var>
						</inputVars>
						<outputVars>
							<var name="Done" type="BOOL">
								<descr>Command done</descr>
							</var>
							<var name="Ok" type="BOOL">
								<descr>Execution Ok</descr>
								<initValue>FALSE</initValue>
							</var>
							<var name="Fault" type="BOOL">
								<descr>Command fault</descr>
							</var>
							<var name="Errors" type="UDINT">
								<descr>Error counter</descr>
							</var>
						</outputVars>
						<localVars>
							<var name="CaseBack" type="USINT">
								<descr>Case back</descr>
							</var>
							<var name="CaseNr" type="USINT">
								<descr>Case number</descr>
							</var>
							<var name="Ch" type="USINT">
								<descr>Character</descr>
							</var>
							<var name="DFrame" type="BYTE" dim0="256">
								<descr>Data frame</descr>
							</var>
							<var name="GetCRC" type="SysGetCrc">
								<descr>Get CRC</descr>
							</var>
							<var name="LclPtr" type="@USINT">
								<descr>Local pointer</descr>
							</var>
							<var name="RxDLgt" type="USINT">
								<descr>Rx data length</descr>
							</var>
							<var name="TimeBf" type="UDINT" dim0="2">
								<descr>Time buffer</descr>
							</var>
							<var name="TxDLgt" type="USINT">
								<descr>Tx data length</descr>
							</var>
							<var name="i" type="UINT">
								<descr>Aux counter</descr>
							</var>
							<var name="FFlop" type="BOOL">
								<descr>Flip/Flop</descr>
							</var>
							<var name="TrIDf" type="USINT">
								<descr>Transaction identifier</descr>
							</var>
							<var name="DFIDx" type="USINT">
								<descr>Data frame index</descr>
							</var>
						</localVars>
					</vars>
					<iecDeclaration valid="TRUE">
						<![CDATA[]]>
					</iecDeclaration>
					<interfaces/>
					<methods/>
					<sourceCode type="ST" encoded="true">
						<![CDATA[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
btIjzAHrPpUHqyWpf9qlY/cfv4vyOA==]]>
					</sourceCode>
				</functionBlock>
			</functionBlocks>
			<programs>
				<program name="STH102Acquisition" version="1.0.0">
					<vars>
						<localVars>
							<var name="STH" type="STH102_DATASTRUCTURE">
								<descr>STH 102 data</descr>
							</var>
							<var name="Mdb" type="ModbusMaster">
								<descr>Modbus master FB</descr>
							</var>
							<var name="Serial" type="SysSerialPort">
								<descr>Serial port</descr>
							</var>
						</localVars>
					</vars>
					<iecDeclaration valid="TRUE">
						<![CDATA[]]>
					</iecDeclaration>
					<sourceCode type="ST">
						<![CDATA[(* ************************************************************************** *)
(* PROGRAM "STH102Acquisition"                                                *)
(* ************************************************************************** *)
(* This program acquire the STH102 Sensit combined sensor.                    *)
(* -------------------------------------------------------------------------- *)

	(* ---------------------------------------------------------------------- *)
	(* INITIALIZATION                                                         *)
	(* ---------------------------------------------------------------------- *)
	(* Serial port initialization. *)

	IF (SysFirstLoop) THEN

		(* Serial port initialization. *)

		Serial.COM:=ADR('COM2'); (* COM port definition *)
		Serial.Baudrate:=9600; (* Baudrate *)
		Serial.Parity:='N'; (* Parity *)
		Serial.DataBits:=8; (* Data bits *)
		Serial.StopBits:=1; (* Stop bits *)
		Serial.DTRManagement:=DTR_AUTO_WO_TIMES; (* DTR management *)
		Serial.DTRComplement:=FALSE; (* DTR complement *)
		Serial.EchoFlush:=FALSE; (* Received echo flush *)
		Serial.DTROnTime:=0; (* DTR On time delay (mS) *)
		Serial.DTROffTime:=0; (* DTR Off time delay (mS) *)
		Serial.FlushTm:=0; (* Flush time (mS) *)
		Serial.RxSize:=0; (* Rx buffer size *)
		Serial.TxSize:=0; (* Tx buffer size *)
		
		(* Modbus master initialization. *)

		Mdb.SpyOn:=TRUE; (* Spy On *)	
		Mdb.Type:=0; (* Modbus type *)	
		Mdb.Node:=1; (* Device modbus node *)	
		Mdb.FCode:=16#03; (* Modbus function code *)	
		Mdb.Address:=1; (* Modbus register address *)	
		Mdb.Points:=SIZEOF(STH)/2; (* Modbus register points *)	
		Mdb.Buffer:=ADR(STH); (* Memory buffer address *)	
 		Mdb.IFTime:=3430; (* Interframe time (uS) *)	
		Mdb.Timeout:=100; (* Timeout time (mS) *)	
		Mdb.Delay:=10; (* Delay time (mS) *)	
	END_IF;

	(* ---------------------------------------------------------------------- *)
	(* MODBUS MANAGEMENT                                                      *)
	(* ---------------------------------------------------------------------- *)
	(* Manage the modbus master communication. *)

	Serial(Open:=TRUE); (* Serial port management *)
	Mdb.File:=Serial.File; (* File pointer *)	
	Mdb(); (* Modbus master *)
	Mdb.Enable:=Serial.Opened AND NOT(Mdb.Done); (* Modbus enable *)	

(* [End of file] *)

]]>
					</sourceCode>
				</program>
			</programs>
			<macros/>
			<structs>
				<struct name="STH102_DATASTRUCTURE" version="1.0.0">
					<vars>
						<var name="ModuleID" type="WORD">
							<descr>Module ID</descr>
						</var>
						<var name="Firmware" type="UINT">
							<descr>Firmware version</descr>
						</var>
						<var name="LSBStatus" type="BYTE">
							<descr>LSB status</descr>
						</var>
						<var name="MSBStatus" type="BYTE">
							<descr>MSB status</descr>
						</var>
						<var name="Address" type="USINT">
							<descr>Module address</descr>
						</var>
						<var name="BaudRate" type="USINT">
							<descr>Baud rate</descr>
						</var>
						<var name="SerialSettings" type="WORD">
							<descr>Serial port settings</descr>
						</var>
						<var name="EEPROMWrites" type="UINT">
							<descr>Number of writes in EEPROM</descr>
						</var>
						<var name="Reserved1" type="WORD" dim0="2"/>
						<var name="Temperature" type="INT">
							<descr>Temperature (0.01 °C)</descr>
						</var>
						<var name="Humidity" type="UINT">
							<descr>Humidity (0.01 %)</descr>
						</var>
						<var name="Reserved2" type="WORD" dim0="4"/>
						<var name="TCorrection" type="INT">
							<descr>Temperature correction (0.01 °C)</descr>
						</var>
						<var name="HCorrection" type="INT">
							<descr>Humidity correction (0.01 %)</descr>
						</var>
						<var name="Reserved3" type="WORD" dim0="3"/>
					</vars>
				</struct>
			</structs>
			<typedefs/>
			<enums/>
			<subranges/>
			<interfaces/>
		</main>
		<target id="Mps054_XTarget_20_0" name="SensitSTH102.tgt" fullXml="false">
			<![CDATA[(* ************************************************************************** *)
(* Programmer   : Massimo Piovera                                             *)
(* Date         : 27/10/2017                                                  *)
(* ************************************************************************** *)
(* Alias "ELSIST XTarget 20.0"                                                *)
(* -------------------------------------------------------------------------- *)

(* ************************************************************************** *)
(* VARIABLES                                                                  *)
(* ************************************************************************** *)

VAR_GLOBAL

    {G:"System variables"}
    SysVR               AT %MB0.0 : ARRAY[0..767] OF BYTE;      {DE:"System read only variables"}
    SysClock100         AT %MB0.0 : BOOL;                       {DE:"System clock 100 mS"}
    SysClock1000        AT %MB0.1 : BOOL;                       {DE:"System clock 1000 mS"}
    SysBackupEnd        AT %MB0.2 : BOOL;                       {DE:"System backup end"}
    SysRestoreFault     AT %MB0.3 : BOOL;                       {DE:"System restore fault"}
    SysPLCInRun         AT %MB0.4 : BOOL;                       {DE:"System PLC is running"}
    SysFirstLoop        AT %MB0.5 : BOOL;                       {DE:"System first execution loop"}
    SysLLabCn           AT %MB0.6 : BOOL;                       {DE:"LogicLab connected to the system"}
    SysIsDST            AT %MB0.7 : BOOL;                       {DE:"Is daylight saving time"}
    SysDTSet            AT %MB0.8 : BOOL;                       {DE:"Date/Time set"}
    SysUVSet            AT %MB0.9 : BOOL;                       {DE:"User variables set"}
    SysAlwaysOff        AT %MB0.10 : BOOL;                      {DE:"Always off"}
    SysAlwaysOn         AT %MB0.11 : BOOL;                      {DE:"Always on"}
    SysFFBUspt          AT %MB0.12 : BOOL;                      {DE:"Function or FB unsupported"}
    SysFFBPrt           AT %MB0.13 : BOOL;                      {DE:"Function or FB protected"}
    SysCfgChanged       AT %MB0.14 : BOOL;                      {DE:"System configuration changed"}

    SysActTaskID        AT %MB0.64 : USINT;                     {DE:"System active task ID"}
    SysErActTaskID      AT %MB0.65 : USINT;                     {DE:"System task ID in error"}

    SysModulesReady     AT %MB0.128 : WORD;                     {DE:"Modules connected to Sline bus (bit index)"}
    SysApllVMajor       AT %MB0.130 : UINT;                     {DE:"Application major version number"}
    SysApllVMinor       AT %MB0.132 : UINT;                     {DE:"Application minor version number"}

    SysTBackLpTm        AT %MB0.256 : UDINT;                    {DE:"System Back task loop time (uS)"}
    SysTBackLpTmMin     AT %MB0.260 : UDINT;                    {DE:"System Back task loop time min (uS)"}
    SysTBackLpTmMax     AT %MB0.264 : UDINT;                    {DE:"System Back task loop time max (uS)"}

    SysTBootExTm        AT %MB0.268 : UDINT;                    {DE:"System Boot task execution time (uS)"}
    SysTBootExTmMin     AT %MB0.272 : UDINT;                    {DE:"System Boot task execution time min (uS)"}
    SysTBootExTmMax     AT %MB0.276 : UDINT;                    {DE:"System Boot task execution time max (uS)"}

    SysTFastExTm        AT %MB0.280 : UDINT;                    {DE:"System Fast task execution time (uS)"}
    SysTFastExTmMin     AT %MB0.284 : UDINT;                    {DE:"System Fast task execution time min (uS)"}
    SysTFastExTmMax     AT %MB0.288 : UDINT;                    {DE:"System Fast task execution time max (uS)"}

    SysTSlowExTm        AT %MB0.292 : UDINT;                    {DE:"System Slow task execution time (uS)"}
    SysTSlowExTmMin     AT %MB0.296 : UDINT;                    {DE:"System Slow task execution time min (uS)"}
    SysTSlowExTmMax     AT %MB0.300 : UDINT;                    {DE:"System Slow task execution time max (uS)"}

    SysTBackExTm        AT %MB0.304 : UDINT;                    {DE:"System Back task execution time (uS)"}
    SysTBackExTmMin     AT %MB0.308 : UDINT;                    {DE:"System Back task execution time min (uS)"}
    SysTBackExTmMax     AT %MB0.312 : UDINT;                    {DE:"System Back task execution time max (uS)"}

    SysStartTime        AT %MB0.316 : UDINT;                    {DE:"PLC run since Date/Time [Epoch time]"}
    SysTime             AT %MB0.320 : UDINT;                    {DE:"System time [mS]"}
    SysTFastLpTm        AT %MB0.324 : UDINT;                    {DE:"System Fast task loop time (uS)"}
    SysTSlowLpTm        AT %MB0.328 : UDINT;                    {DE:"System Slow task loop time (uS)"}

    SysApplID           AT %MB0.332 : UDINT;                    {DE:"Application ID"}
    SysMfcCode          AT %MB0.336 : UDINT;                    {DE:"Manufacturer code"}
    SysCustomerCode     AT %MB0.340 : UDINT;                    {DE:"Customer code"}
    SysErCode           AT %MB0.344 : UDINT;                    {DE:"System error code"}
    SysErTime           AT %MB0.348 : UDINT;                    {DE:"System error time"}
    SysSerialNr         AT %MB0.352 : UDINT;                    {DE:"Device serial number"}
    SysApllBTime        AT %MB0.356 : UDINT;                    {DE:"Build time (Epoch)"}
    SysUniqueID         AT %MB0.360 : UDINT;                    {DE:"Unique ID"}
    
    SysPLCUpTime        AT %MB0.364 : UDINT;                    {DE:"PLC up time (S)"}

    SysCode             AT %MB0.512 : STRING[10];               {DE:"Device product code"}
    SysFVersion         AT %MB0.523 : STRING[10];               {DE:"Firmware version"}
    SysErInfos          AT %MB0.534 : STRING[32];               {DE:"System error infos"}
    SysApllName         AT %MB0.567 : STRING[10];               {DE:"Application name"}
    SysUSetA            AT %MB0.578 : STRING[16];               {DE:"User setting (A)"}
    SysUSetB            AT %MB0.595 : STRING[16];               {DE:"User setting (B)"}
    SysUSetC            AT %MB0.612 : STRING[16];               {DE:"User setting (C)"}
    SysUSetD            AT %MB0.629 : STRING[16];               {DE:"User setting (D)"}

    {G:"System variables"}

    SysVRW              AT %MB1.0 : ARRAY[0..639] OF BYTE;      {DE:"System read and write variables"}
    SysTimeInit         AT %MB1.0 : BOOL;                       {DE:"System timing calculation init"}

    SysDateTime         AT %MB1.256 : UDINT;                    {DE:"System current local date time [Epoch time]"}
    SysLastError        AT %MB1.260 : UDINT;                    {DE:"Last error value"}
    SysUTCDateTime      AT %MB1.264 : UDINT;                    {DE:"System current UTC date time [Epoch time]"}

    SysUInfoA           AT %MB1.512 : STRING[16];               {DE:"User info (A)"}
    SysUInfoB           AT %MB1.529 : STRING[16];               {DE:"User info (B)"}
    SysUInfoC           AT %MB1.546 : STRING[16];               {DE:"User info (C)"}
    SysUInfoD           AT %MB1.563 : STRING[16];               {DE:"User info (D)"}

    {G:"User data"}
    SysData             AT %MB100.0 : ARRAY[0..4095] OF BYTE;   {IO:"User data and backup"}
    SysDataBk           AT %MB100.2048 : ARRAY[0..2047] OF BYTE;{IO:"User data backup"}

    {G:"Digital inputs"}
    SysDI00             AT %IX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 00"}
    SysDI01             AT %IX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 01"}
    SysDI02             AT %IX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 02"}
    SysDI03             AT %IX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 03"}
    SysDI04             AT %IX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 04"}
    SysDI05             AT %IX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 05"}
    SysDI06             AT %IX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 06"}
    SysDI07             AT %IX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 07"}
    SysDI08             AT %IX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 08"}
    SysDI09             AT %IX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic inputs module 09"}
    SysDI10             AT %IX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 10"}
    SysDI11             AT %IX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 11"}
    SysDI12             AT %IX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 12"}
    SysDI13             AT %IX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 13"}
    SysDI14             AT %IX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 14"}
    SysDI15             AT %IX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic inputs module 15"}

    SysCPUDI            AT %IX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic inputs CPU"}

    {G:"Digital outputs"}
    SysDO00             AT %QX0.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 00"}
    SysDO01             AT %QX1.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 01"}
    SysDO02             AT %QX2.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 02"}
    SysDO03             AT %QX3.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 03"}
    SysDO04             AT %QX4.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 04"}
    SysDO05             AT %QX5.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 05"}
    SysDO06             AT %QX6.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 06"}
    SysDO07             AT %QX7.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 07"}
    SysDO08             AT %QX8.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 08"}
    SysDO09             AT %QX9.0 : ARRAY[0..31] OF BOOL;       {IO:"Logic outputs module 09"}
    SysDO10             AT %QX10.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 10"}
    SysDO11             AT %QX11.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 11"}
    SysDO12             AT %QX12.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 12"}
    SysDO13             AT %QX13.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 13"}
    SysDO14             AT %QX14.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 14"}
    SysDO15             AT %QX15.0 : ARRAY[0..31] OF BOOL;      {IO:"Logic outputs module 15"}

    SysCPUDO            AT %QX255.0 : ARRAY[0..31] OF BOOL;     {IO:"Logic outputs CPU"}
END_VAR

(* ########################################################################## *)
(* SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Task ID definition                                                         *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Task ID definition"}

    ID_TASK_BOOT : USINT := 0;  {DE:"Boot task ID"}
    ID_TASK_BACK : USINT := 1;  {DE:"Back task ID"}
    ID_TASK_SLOW : USINT := 2;  {DE:"Slow task ID"}
    ID_TASK_FAST : USINT := 3;  {DE:"Fast task ID"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMAlloc" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMAlloc : @USINT

    {DE:"Allocate a memory buffer"}

    VAR_INPUT
        Size : UDINT;           {DE:"Memory size"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMAlloc" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMAlloc : BOOL

    {DE:"Allocate a relocatable memory buffer"}

    VAR_INPUT
        Size    : UDINT;           {DE:"Memory size"}
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysRMFree" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysRMFree : BOOL

    {DE:"Disallocate a relocatable memory buffer"}

    VAR_INPUT
        DataPtr : @UDINT;          {DE:"Memory buffer address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRandom" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRandom : REAL

    {DE:"Get random number"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSysTime" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSysTime : UDINT

    {DE:"Get uSec system time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetTaskLpTime" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetTaskLpTime : BOOL

    {DE:"Set the task loop time"}

    VAR_INPUT
        TaskID : USINT;         {DE:"Task ID"}
        Time   : UDINT;         {DE:"Task time [uSec]"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetLastError : BOOL

    { HIDDEN:ON }
    {DE:"Set the last error"}

    VAR_INPUT
        Error    : UDINT;       {DE:"Error number"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetLastError" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetLastError : UDINT

    {DE:"Get the last error"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetEndianness" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetEndianness : BOOL

    {DE:"Get the endianness"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* TERMIO DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* TermIO definition                                                          *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"TermIO definition"}

    NULL : FILEP := 0;  {DE:"NULL pointer"}
    EOF : INT := -1;    {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* FILEP definition                                                           *)
(* -------------------------------------------------------------------------- *)

TYPE FILEP : UDINT; END_TYPE

(* -------------------------------------------------------------------------- *)
(* "Sysfopen" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfopen : FILEP

    {DE:"Open a file"}

    VAR_INPUT
        FName : STRING[20];     {DE:"File name"}
        Mode  : STRING[4];      {DE:"Attribute"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfclose" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfclose : INT

    {DE:"Close a file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIsOpen" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIsOpen : BOOL

    {DE:"Get the file open status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfgetc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfgetc : INT

    {DE:"Get character from file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfputc" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfputc : INT

    {DE:"Put character to file"}

    VAR_INPUT
        Ch   : INT;             {DE:"Character"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfread" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfread : INT

    {DE:"Read data from file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer filled with read data"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfwrite" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfwrite : INT

    {DE:"Write data to file"}

    VAR_INPUT
        Buf  : @USINT;          {DE:"Buffer of data to write"}
        Size : INT;             {DE:"Bytes per data block"}
        Count: INT;             {DE:"Nr of data blocks"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIChars" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetIChars" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetIChars : INT

    {DE:"Get available input chars"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOSpace" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetOSpace" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetOSpace : INT

    {DE:"Get available output space"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFIBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFIBfClear : BOOL

    {DE:"Clear input buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfClear" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfClear : BOOL

    {DE:"Clear output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFOBfFlush" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFOBfFlush : BOOL

    {DE:"Flush output buffer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetIBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetIBfSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetRxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetRxBSize : UDINT

    {DE:"Get input buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysFGetOBfSize" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysFGetOBfSize : UDINT

    {DE:"Get output buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetTxBSize" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetTxBSize : UDINT

    {DE:"Get Tx buffer size"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* FILE SYSTEM DATA TYPES DEFINITIONS AND FUNCTIONS                           *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* File system definition                                                     *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"FSeek origin definition"}

    ID_SEEK_SET: USINT := 0;  {DE:"Beginning of file"}
    ID_SEEK_CUR: USINT := 1;  {DE:"Current position of the file pointer"}
    ID_SEEK_END: USINT := 2;  {DE:"End of file"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "Sysrename" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysrename : BOOL

    {DE:"Rename a file"}

    VAR_INPUT
        OldName : STRING[32];   {DE:"File to rename"}
        NewName : STRING[32];   {DE:"New name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysremove" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysremove : BOOL

    {DE:"Remove a file"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File to rename"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfilelength" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfilelength : DINT

    {DE:"Returns the file length"}

    VAR_INPUT
        Name : STRING[32];      {DE:"File name"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysfseek" function                                                        *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysfseek : DINT

    {DE:"Set the file pointer"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Offset : DINT;          {DE:"Offset"}
        Origin : INT;           {DE:"Origin"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysDirListing" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDirListing

    {DE:"Directory listing"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Init    : BOOL;         {DE:"Init command"}
        Next    : BOOL;         {DE:"Next command"}
        PathName: STRING[32];   {DE:"Directory name"}
    END_VAR

    VAR_OUTPUT
        Found   : BOOL;         {DE:"File found"}
        Fault   : BOOL;         {DE:"Fault"}
        IsDir   : BOOL;         {DE:"Is directory"}
        Size    : UDINT;        {DE:"File size"}
        Time    : UDINT;        {DE:"File time (UTC)"}
        FileName: STRING[16];   {DE:"File name"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SERIAL DATA TYPES DEFINITIONS AND FUNCTIONS                                *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* SYSSERIALMODE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSSERIALMODE : STRUCT      {DE:"Serial mode"}
        Baudrate : UDINT;       {DE:"Baudrate"}
        Parity : STRING[1];     {DE:"Parity type"}
        DataBits : USINT;       {DE:"Nr of data bits"}
        StopBits : USINT;       {DE:"Nr of stop bits"}
        DTRManagement : USINT;  {DE:"DTR management type"}
        DTRComplement : BOOL;   {DE:"Complement the DTR signal"}
        EchoFlush : BOOL;       {DE:"Flush the echo"}
        DTROnTime : UINT;       {DE:"DTR On wait time"}
        DTROffTime : UINT;      {DE:"DTR Off wait time"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* Serial DTR mode definition                                                 *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Serial mode definition"}

    DTR_OFF : USINT := 0;   {DE:"DTR off"}
    DTR_ON : USINT := 1;    {DE:"DTR on"}
    DTR_AUTO_WO_TIMES : USINT := 2; {DE:"DTR Auto without times"}
    DTR_AUTO_W_TIMES : USINT := 3;  {DE:"DTR Auto with times"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialMode : BOOL

    {DE:"Get serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialMode" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialMode : BOOL

    {DE:"Set serial mode"}

    VAR_INPUT
        Mode : @SYSSERIALMODE;  {DE:"SYSSERIALMODE data"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetSerialCTS" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetSerialCTS : BOOL

    {DE:"Get serial CTS signal status"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetSerialDTR" function                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetSerialDTR : BOOL

    {DE:"Set serial DTR signal status"}

    VAR_INPUT
        Status : BOOL;          {DE:"DTR status"}
        File : FILEP;           {DE:"File"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSerialPort" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSerialPort

    {DE:"Serial port manager"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Open    : BOOL;         {DE:"Open serial port"}
        COM     : @USINT;       {DE:"COM port"}
        Baudrate: UDINT;        {DE:"Baudrate"}
        Parity  : STRING[1];    {DE:"Parity type"}
        DataBits: USINT;        {DE:"Number of data bits"}
        StopBits: USINT;        {DE:"Number of stop bits"}
        DTRManagement: USINT;   {DE:"DTR management type"}
        DTRComplement: BOOL;    {DE:"DTR signal complement"}
        EchoFlush   : BOOL;     {DE:"Flush the echo characters"}
        DTROnTime   : UINT;     {DE:"DTR on time"}
        DTROffTime  : UINT;     {DE:"DTR off time"}
        FlushTm : UINT;         {DE:"Flush time [mS]"}
        RxSize  : UINT;         {DE:"Rx buffer data size"}
        TxSize  : UINT;         {DE:"Tx buffer data size"}
    END_VAR

    VAR_OUTPUT
        Opened  : BOOL;         {DE:"Serial port was opened"}
        Fault   : BOOL;         {DE:"Fault status"}
        File    : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SCANF AND PRINTF DATA TYPES DEFINITIONS AND FUNCTIONS                      *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Variable types definition"}

    BOOL_TYPE : USINT := 10;    {DE:"Boolean (1 bits)"}

    BYTE_TYPE : USINT := 20;    {DE:"Byte (8 bits)"}
    SINT_TYPE : USINT := 21;    {DE:"Single integer signed (8 bits)"}
    USINT_TYPE : USINT := 22;   {DE:"Single integer unsigned (8 bits)"}

    WORD_TYPE : USINT := 30;    {DE:"Word (16 bits)"}
    INT_TYPE : USINT := 31;     {DE:"Integer signed (16 bits)"}
    UINT_TYPE : USINT := 32;    {DE:"Integer unsigned (16 bits)"}

    DWORD_TYPE : USINT := 40;   {DE:"Double word (32 bits)"}
    DINT_TYPE : USINT := 41;    {DE:"Double integer signed (32 bits)"}
    UDINT_TYPE : USINT := 42;   {DE:"Double integer unsigned (32 bits)"}
    REAL_TYPE : USINT := 43;    {DE:"Floating (32 bits)"}

    STRING_TYPE : USINT := 50;  {DE:"String"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysVarsscanf" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsscanf : BOOL

    {DE:"Extracts values from string"}

    VAR_INPUT
        String : @USINT;        {DE:"String to scan"}
        Format : STRING[80];    {DE:"Scan format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarfprintf" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarfprintf : INT

    {DE:"Variable print to file"}

    VAR_INPUT
        File : FILEP;           {DE:"File"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysVarsnprintf" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysVarsnprintf : INT

    {DE:"Variable print to string"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysLWVarsnprintf" function                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysLWVarsnprintf : INT

    {DE:"Variable print to string with append"}

    VAR_INPUT
        String : @USINT;        {DE:"Return string"}
        Size : UDINT;           {DE:"Return size"}
        Format : STRING[80];    {DE:"Print format"}
        VarType : USINT;        {DE:"Variable type"}
        VarAdd : UDINT;         {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* CODE FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                         *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysPCodeAccept" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPCodeAccept : BOOL

    {DE:"Accept a protection code"}

    VAR_INPUT
        Code : STRING[20];      {DE:"Code"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIDEnabled" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIDEnabled : REAL

    { HIDDEN:ON }
    {DE:"Protected ID enabled"}

    VAR_INPUT
        ID : UINT;              {DE:"ID to check"}
        DTime : UDINT;          {DE:"Demo time"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* I2C BUS TYPES DEFINITIONS AND FUNCTIONS                                    *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysI2CWrRd" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysI2CWrRd : BOOL

    {DE:"Write and read on I2C bus"}

    VAR_INPUT
        Address : USINT;        {DE:"I2c address"}
        WrBytes : USINT;        {DE:"Bytes to write"}
        WrBuffer: @USINT;       {DE:"Write data buffer"}
        RdBytes : USINT;        {DE:"Bytes to read"}
        RdBuffer: @USINT;       {DE:"Read data buffer"}
     END_VAR

    { CODE:EMBEDDED }

END_FUNCTION

(* ########################################################################## *)
(* CAN DATA TYPES DEFINITIONS AND FUNCTIONS                                   *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* CAN bit rate definition                                                    *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"CAN bit rate definition"}

    CAN_50KBIT : USINT := 0;    {DE:"Bit rate 50 Khz"}
    CAN_100KBIT : USINT := 1;   {DE:"Bit rate 100 Khz"}
    CAN_125KBIT : USINT := 2;   {DE:"Bit rate 125 Khz"}
    CAN_250KBIT : USINT := 3;   {DE:"Bit rate 250 Khz"}
    CAN_500KBIT : USINT := 4;   {DE:"Bit rate 500 Khz"}
    CAN_1MBIT : USINT := 5;     {DE:"Bit rate 1 Mhz"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* SYSCANMESSAGE definition                                                   *)
(* -------------------------------------------------------------------------- *)

TYPE
    SYSCANMESSAGE : STRUCT      {DE:"CAN message"}
        RmReq : BOOL;           {DE:"FALSE:Data frame, TRUE:Remote request"}
        Length : USINT;         {DE:"Data length"}
        MsgID : UDINT;          {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Data : ARRAY[0..7] OF USINT;    {DE:"Message data"}
    END_STRUCT;
END_TYPE

(* -------------------------------------------------------------------------- *)
(* "SysCANSetMode" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANSetMode : BOOL

    {DE:"Sets the CAN controller mode"}

    VAR_INPUT
        BitRate : USINT;        {DE:"Bit rate"}
        Filter : UDINT;         {DE:"Acceptance filter"}
        Mask : UDINT;           {DE:"Acceptance mask"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIsCANRxTxAv" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysIsCANRxTxAv : BOOL

    {DE:"Check if CAN Rx/Tx is available"}

    VAR_INPUT
        Select : BOOL;         {DE:"eFALSE:Rx message selection, eTRUE:Tx space selection"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANRxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANRxMsg : BOOL

    {DE:"Receive a CAN message"}

    VAR_INPUT
        Mask : UDINT;           {DE:"Message ID mask"}
        ID : UDINT;             {DE:"Message ID (FF:Bit 31) (11 or 29 Bit)"}
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysCANTxMsg" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysCANTxMsg : BOOL

    {DE:"Send a CAN message"}

    VAR_INPUT
        Msg : @SYSCANMESSAGE;   {DE:"Message pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* IEC EMBEDDED SUPPORT FUNCTION BLOCKS                                       *)
(* ########################################################################## *)

(* ************************************************************************** *)
(* DATE AND TIME FUNCTION BLOCKS                                              *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysETimeToDate" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysETimeToDate

    {DE:"Epoch time to date conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        WeekDay: USINT;         {DE:"WeekDay"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDateToETime" function block                                            *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDateToETime

    {DE:"Date to epoch time conversion"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Year   : UINT;          {DE:"Year"}
        Month  : USINT;         {DE:"Month"}
        Day    : USINT;         {DE:"Day"}
        Hour   : USINT;         {DE:"Hour"}
        Minute : USINT;         {DE:"Minute"}
        Second : USINT;         {DE:"Second"}
    END_VAR

    VAR_OUTPUT
        Done   : BOOL;          {DE:"Conversion done"}
        Fault  : BOOL;          {DE:"Conversion fault"}
        EpochTime: UDINT;       {DE:"Epoch time"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetUTCDateTime : UDINT

    {DE:"Get the system UTC date time"}

    VAR_INPUT
        Cmd : BOOL;             {DE:"Command"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysSetUTCDateTime" function                                               *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSetUTCDateTime : BOOL

    {DE:"Set the system UTC date time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysTimeZoneAdj" function                                                  *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysTimeZoneAdj : UDINT

    {DE:"Adjust the UTC date time with time zone and daylight saving time"}

    VAR_INPUT
        UTCDateTime : UDINT;             {DE:"UTC date and time to adjust"}
        TimeZone    : SINT;              {DE:"Difference to Greenwich time (GMT) (H)"}
        DaylightZone: USINT;             {DE:"Daylight saving zone (0=None; 1=Europe; 2=USA"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* UTILITIES                                                                  *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "Sysmemset" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemset : @USINT

    {DE:"Fill a memory area with a character value"}

    VAR_INPUT
        Buff    : @USINT;       {DE:"Memory area"}
        Ch      : INT;          {DE:"Character to set"}
        Size    : UDINT;        {DE:"Number of bytes to set"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysmemmove" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysmemmove : @USINT

    {DE:"Copy bytes between two memory areas"}

    VAR_INPUT
        Dest    : @USINT;       {DE:"Destination area"}
        Src     : @USINT;       {DE:"Source area"}
        Size    : UDINT;        {DE:"Number of bytes to copy"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"Find mode"}

    FIND_DEFAULT        : USINT := 16#00;  {DE:"Default find"}
    FIND_FROM_END       : USINT := 16#01;  {DE:"Find from end"}
    FIND_NO_CASE        : USINT := 16#02;  {DE:"Find case insentive"}
    FIND_GET_END        : USINT := 16#04;  {DE:"Return a pointer to end of found"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysMemFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysMemFind : @USINT

    {DE:"Locate a memory area inside another"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"Memory area where to find"}
        HSize   : UDINT;        {DE:"Haystack area size"}
        Needle  : @USINT;       {DE:"Memory area to find"}
        NSize   : UDINT;        {DE:"Needle area size"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systolower" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systolower : INT

    {DE:"Convert a character to lower case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Systoupper" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION Systoupper : INT

    {DE:"Convert a character to upper case"}

    VAR_INPUT
        Ch      : INT;          {DE:"Character to convert"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "Sysstrlen" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION Sysstrlen : UDINT

    {DE:"Calculate length of string"}

    VAR_INPUT
        Str     : @USINT;       {DE:"String"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysStrFind" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysStrFind : @USINT

    {DE:"Locate a substring inside a string"}

    VAR_INPUT
        Haystack: @USINT;       {DE:"String where to find"}
        Needle  : @USINT;       {DE:"String to find"}
        Mode    : USINT;        {DE:"Find mode"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

VAR_GLOBAL CONSTANT

    {G:"OS variable ID"}

    OSID_CFG_WRITE          : UDINT := 1;   {DE:"Save configuration"}
    
    OSID_ETH0_IP            : UDINT := 100; {DE:"Eth0 IP address"}
    OSID_ETH0_MASK          : UDINT := 101; {DE:"Eth0 network mask"}
    OSID_ETH0_GATEWAY       : UDINT := 102; {DE:"Eth0 gateway"}
    OSID_ETH0_MAC           : UDINT := 103; {DE:"Eth0 MAC address"}
    OSID_ETH0_DNS_PRIM      : UDINT := 104; {DE:"Eth0 primary DNS"}
    OSID_ETH0_DNS_SEC       : UDINT := 105; {DE:"Eth0 secondary DNS"}
    
    OSID_ETH1_IP            : UDINT := 200; {DE:"Eth1 IP address"}
    OSID_ETH1_MASK          : UDINT := 201; {DE:"Eth1 network mask"}
    OSID_ETH1_GATEWAY       : UDINT := 202; {DE:"Eth1 gateway"}
    OSID_ETH1_MAC           : UDINT := 203; {DE:"Eth1 MAC address"}
    OSID_ETH1_LEASED_MAC    : UDINT := 204; {DE:"Eth1 leased MAC address"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysOSIDValue" function                                                    *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysOSIDValue : BOOL

    {DE:"Get or set an operative system variable"}

    VAR_INPUT
        Wr      : BOOL;         {DE:"Write command"}
        OSID    : UDINT;        {DE:"Variable ID"}
        Val     : @USINT;       {DE:"Variable pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetCrc" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCrc

    {DE:"Crc calculation"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Buf   : @USINT;         {DE:"Buffer filled with read data"}
        ByteNr: UINT;           {DE:"Number of byte to calculate"}
        CrcIni: UINT;           {DE:"Crc init value"}
    END_VAR

    VAR_OUTPUT
        Crc : UINT;             {DE:"Calculated Crc"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ************************************************************************** *)
(* CHECK CALCULATION                                                          *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* Check mode definition                                                      *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Check type definitions"}

    CRC_16_MODBUS   : USINT := 1;   {DE:"Modbus RTU CRC"}
    LRC_ISO1155     : USINT := 2;   {DE:"ISO1155 LRC"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysGetCheck" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysGetCheck : UDINT

    {DE:"Check calculation"}

    VAR_INPUT
        Buf     : @USINT;       {DE:"Buffer filled with data"}
        ByteNr  : UDINT;        {DE:"Number of bytes to calculate"}
        Init    : UDINT;        {DE:"Init value"}
        Type    : USINT;        {DE:"Check type"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ************************************************************************** *)
(* PERIPHERAL MANAGEMENT FUNCTION BLOCKS                                      *)
(* ************************************************************************** *)

(* -------------------------------------------------------------------------- *)
(* "SysPhrInfos" function                                                     *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrInfos : BOOL

    {DE:"Read peripheral module infos"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        InfoID: USINT;          {DE:"Info ID"}
        Info : STRING[10];      {DE:"Info report"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVRd" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVRd : BOOL

    {DE:"Read variable from peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        RdAdd: UINT;            {DE:"Read address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysPhrVWr" function                                                       *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysPhrVWr : BOOL

    {DE:"Write variable to peripheral bus"}

    VAR_INPUT
        Module: USINT;          {DE:"Module address"}
        WrAdd: UINT;            {DE:"Write address"}
        VarType: USINT;         {DE:"Variable type"}
        VarAdd: UDINT;          {DE:"Variable address"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysGetPhrDI" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital input mode"}

    DI_8_LL : USINT := 1;       {DE:"Read 0-7 input mode"}
    DI_8_L  : USINT := 2;       {DE:"Read 8-15 input mode"}
    DI_8_M  : USINT := 3;       {DE:"Read 16-23 input mode"}
    DI_8_MM : USINT := 4;       {DE:"Read 24-31 input mode"}

    DI_16_L : USINT := 5;       {DE:"Read 0-15 input mode"}
    DI_16_M : USINT := 6;       {DE:"Read 16-31 input mode"}

    DI_32   : USINT := 7;       {DE:"Read 32 input mode"}
    
    DI_I_8_LL : USINT := 11;    {DE:"Read 0-7 immediate input mode"}
    DI_I_8_L  : USINT := 12;    {DE:"Read 8-15 immediate input mode"}
    DI_I_8_M  : USINT := 13;    {DE:"Read 16-23 immediate input mode"}
    DI_I_8_MM : USINT := 14;    {DE:"Read 24-31 immediate input mode"}

    DI_I_16_L : USINT := 15;    {DE:"Read 0-15 immediate input mode"}
    DI_I_16_M : USINT := 16;    {DE:"Read 16-31 immediate input mode"}

    DI_I_32   : USINT := 17;    {DE:"Read 32 immediate input mode"}

END_VAR

FUNCTION_BLOCK SysGetPhrDI

    {DE:"Get the peripheral digital inputs"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : DWORD;        {DE:"Digital input value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPhrDO" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital output mode"}

    DO_8_LL : USINT := 1;       {DE:"Write 0-7 output mode"}
    DO_8_L  : USINT := 2;       {DE:"Write 8-15 output mode"}
    DO_8_M  : USINT := 3;       {DE:"Write 16-23 output mode"}
    DO_8_MM : USINT := 4;       {DE:"Write 24-31 output mode"}

    DO_16_L : USINT := 5;       {DE:"Write 0-15 output mode"}
    DO_16_M : USINT := 6;       {DE:"Write 16-31 output mode"}

    DO_32   : USINT := 7;       {DE:"Write 32 output mode"}
END_VAR

FUNCTION_BLOCK SysSetPhrDO

    {DE:"Set the peripheral digital outputs"}

    VAR
        Ver     : USINT := 1;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : DWORD;        {DE:"Digital output value"}
        Mask    : DWORD;        {DE:"Memory mapped output mask"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetAnInp" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Analog to digital mode"}

    AD_IDLE              : USINT := 16#00;  {DE:"Idle mode"}
    AD_VOLT_0_125_COMMON : USINT := 16#01;  {DE:"0-1.25V common mode"}
    AD_VOLT_0_10_COMMON  : USINT := 16#02;  {DE:"0-10V common mode"}
    AD_CURR_0_20_COMMON  : USINT := 16#03;  {DE:"0-20mA common mode"}
    AD_CURR_4_20_COMMON  : USINT := 16#04;  {DE:"4-20mA common mode"}
    AD_VOLT_0_1_COMMON   : USINT := 16#05;  {DE:"0-1V common mode"}
    AD_CURR_0_20_DIFFER  : USINT := 16#06;  {DE:"0-20mA differential mode"}
    AD_VOLT_0_1_DIFFER   : USINT := 16#07;  {DE:"0-1V differential mode"}
    AD_VOLT_0_125_DIFFER : USINT := 16#08;  {DE:"0-1.25V differential mode"}
    AD_VOLT_0_10_DIFFER  : USINT := 16#09;  {DE:"0-10V differential mode"}
    AD_PT100_DIFFER      : USINT := 16#0A;  {DE:"Pt100 differential mode"}
    AD_PT1000_DIFFER     : USINT := 16#0B;  {DE:"Pt1000 differential mode"}
    AD_NI1000_DIFFER     : USINT := 16#0C;  {DE:"Ni1000 differential mode"}
    AD_CURR_4_20_DIFFER  : USINT := 16#0D;  {DE:"4-20mA differential mode"}
    AD_PT100_DIN_43760   : USINT := 16#20;  {DE:"Pt100 DIN_43760 standard"}
    AD_PT100_AMERICAN    : USINT := 16#21;  {DE:"Pt100 American standard"}
    AD_PT100_ITS_90      : USINT := 16#22;  {DE:"Pt100 ITS-90 standard"}
    AD_PT100_IEC_60751   : USINT := 16#23;  {DE:"Pt100 IEC-60751 standard"}
    AD_PT1000_DIN_43760  : USINT := 16#28;  {DE:"Pt1000 DIN_43760 standard"}
    AD_PT1000_AMERICAN   : USINT := 16#29;  {DE:"Pt1000 American standard"}
    AD_PT1000_ITS_90     : USINT := 16#2A;  {DE:"Pt1000 ITS-90 standard"}
    AD_PT1000_IEC_60751  : USINT := 16#2B;  {DE:"Pt1000 IEC-60751 standard"}
    AD_NI1000_DIN_43760  : USINT := 16#30;  {DE:"Ni1000 DIN_43760 standard"}
    AD_THERMOCOUPLE_B    : USINT := 16#40;  {DE:"Thermocouple B type"}
    AD_THERMOCOUPLE_E    : USINT := 16#41;  {DE:"Thermocouple E type"}
    AD_THERMOCOUPLE_J    : USINT := 16#42;  {DE:"Thermocouple J type"}
    AD_THERMOCOUPLE_K    : USINT := 16#43;  {DE:"Thermocouple K type"}
    AD_THERMOCOUPLE_N    : USINT := 16#44;  {DE:"Thermocouple N type"}
    AD_THERMOCOUPLE_R    : USINT := 16#45;  {DE:"Thermocouple R type"}
    AD_THERMOCOUPLE_S    : USINT := 16#46;  {DE:"Thermocouple S type"}
    AD_THERMOCOUPLE_T    : USINT := 16#47;  {DE:"Thermocouple T type"}
    AD_VIN_VREF_G_1      : USINT := 16#5A;  {DE:"Vin/Vref gain=1"}
    AD_VIN_VREF_G_2      : USINT := 16#5B;  {DE:"Vin/Vref gain=2"}
    AD_VIN_VREF_G_4      : USINT := 16#5C;  {DE:"Vin/Vref gain=4"}
    AD_VIN_VREF_G_8      : USINT := 16#5D;  {DE:"Vin/Vref gain=8"}
    AD_VIN_VREF_G_16     : USINT := 16#5E;  {DE:"Vin/Vref gain=16"}
    AD_VIN_VREF_G_32     : USINT := 16#5F;  {DE:"Vin/Vref gain=32"}
    AD_VIN_VREF_G_64     : USINT := 16#60;  {DE:"Vin/Vref gain=64"}
    AD_VIN_VREF_G_128    : USINT := 16#61;  {DE:"Vin/Vref gain=128"}
    AD_RESISTOR_300_OHM  : USINT := 16#6E;  {DE:"Resistor 0-300 ohm"}
    AD_RESISTOR_5000_OHM : USINT := 16#6F;  {DE:"Resistor 0-5000 ohm"}
    
END_VAR

FUNCTION_BLOCK SysGetAnInp

    {DE:"Get analog input"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value   : REAL;         {DE:"Value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetAnOut" function block                                               *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT

    {G:"Digital to analog mode"}

    DA_VOLT_0_10         : USINT := 16#01;  {DE:"0-10V"}
    DA_VOLT_0_5          : USINT := 16#02;  {DE:"0-5V"}
    DA_VOLT_M10_10       : USINT := 16#03;  {DE:"+-10V"}
    DA_VOLT_M5_5         : USINT := 16#04;  {DE:"+-5V"}
    DA_CURR_0_20         : USINT := 16#05;  {DE:"0-20mA"}
    DA_CURR_4_20         : USINT := 16#06;  {DE:"4-20mA"}

END_VAR

FUNCTION_BLOCK SysSetAnOut

    {DE:"Set analog output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode    : USINT;        {DE:"Mode"}
        Value   : REAL;         {DE:"Value"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetCounter" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetCounter

    {DE:"Get counter value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Mode : UDINT;           {DE:"Mode"}
        RCount  : BOOL;         {DE:"Reverse count"}
        Reset  : BOOL;          {DE:"Count reset"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Value  : UDINT;         {DE:"Counter value"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetEncoder" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetEncoder

    {DE:"Get encoder value"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        RCount  : BOOL;         {DE:"Reverse count"}
        ZeroEn  : BOOL;         {DE:"Zero enable"}
        GateEn  : BOOL;         {DE:"Gate enable"}
        RGate   : BOOL;         {DE:"Reverse gate"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ZeroD   : BOOL;         {DE:"Zero pulse detected"}
        GateD   : BOOL;         {DE:"Gate detected"}
        GQuote  : UINT;         {DE:"Gate quote"}
        EQuote  : UINT;         {DE:"Encoder quote"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysDMXMng" function block                                                 *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysDMXMng

    {DE:"DMX protocol management"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Start  : BOOL;          {DE:"Start"}
        File : FILEP;           {DE:"File"}
        Status : USINT;         {DE:"Status byte"}
        Devices : UINT;         {DE:"Number of devices"}
        Delay : UINT;           {DE:"Interframe delay [mSec]"}
        DataPtr : @USINT;       {DE:"Data array pointer"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSetPWMOut" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSetPWMOut

    {DE:"Set PWM generator output"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Address : USINT;        {DE:"Module address"}
        Channel : USINT;        {DE:"Channel"}
        Frequency : REAL;       {DE:"Frequency (Hz)"}
        Duty    : REAL;         {DE:"Duty cycle (%)"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* NETWORK DATA TYPES DEFINITIONS AND FUNCTIONS                               *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktSend" function                                                   *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysUDPSktSend : INT

    {DE:"Send data to UDP socket"}

    VAR_INPUT
        File    : FILEP;        {DE:"File pointer"}
        TxData  : @USINT;       {DE:"Tx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort    : UINT;     {DE:"Peer port"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysIPReach" function block                                                *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysIPReach

    {DE:"Checks if IP is reachable"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Refresh : USINT;        {DE:"Refresh percentage (%)"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysSktListen" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysSktListen

    {DE:"Set socket in listening"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File"}
        MyIP    : STRING[15];   {DE:"My IP address"}
        MyPort  : UINT;         {DE:"My port"}
        LifeTm  : UINT;         {DE:"Life time (S)"}
        FlushTm : UINT;         {DE:"Flush time (mS)"}
        RxSize  : UINT;         {DE:"Rx data size"}
        TxSize  : UINT;         {DE:"Tx data size"}
    END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        Connect : BOOL;         {DE:"Socket connect"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPSktRcv" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPSktRcv

    {DE:"Receive data from UDP socket"}

    VAR
        Ver     : USINT := 0;   {DE:"Function block version"}
        IVP     : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable  : BOOL;         {DE:"Function enable"}
        File    : FILEP;        {DE:"File pointer"}
        PeerIP  : STRING[15];   {DE:"Peer IP address"}
        PeerPort: UINT;         {DE:"Peer port"}
        RxData  : @USINT;       {DE:"Rx data buffer"}
        Size    : UINT;         {DE:"Data buffer size"}
     END_VAR

    VAR_OUTPUT
        Done    : BOOL;         {DE:"Function done"}
        Fault   : BOOL;         {DE:"Function fault"}
        ClientIP: STRING[15];   {DE:"Client IP address"}
        ClientPort  : UINT;     {DE:"Client port"}
        RxSize  : UINT;         {DE:"Received bytes"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPClient

    {DE:"UDP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysUDPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysUDPServer

    {DE:"UDP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPClient" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPClient

    {DE:"TCP client"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Connect  : BOOL;         {DE:"Connection request"}
        PeerAdd  : @USINT;       {DE:"Peer address"}
        PeerPort : UINT;         {DE:"Peer port"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Connected: BOOL;         {DE:"Connected"}
        Fault    : BOOL;         {DE:"Function fault"}
        File     : FILEP;        {DE:"File pointer"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysTCPServer" function block                                              *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysTCPServer

    {DE:"TCP server"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        Enable   : BOOL;         {DE:"Server enable"}
        FilesArr : @FILEP;       {DE:"File pointer array address"}
        LocalAdd : @USINT;       {DE:"Local address"}
        LocalPort: UINT;         {DE:"Local port"}
        MaxConn  : USINT;        {DE:"Max number of connections"}
        FlushTm  : UINT;         {DE:"Flush time [mS]"}
        LifeTm   : UINT;         {DE:"Life time [S]"}
        RxSize   : UINT;         {DE:"Rx buffer data size"}
        TxSize   : UINT;         {DE:"Tx buffer data size"}
     END_VAR

    VAR_OUTPUT
        Enabled  : BOOL;         {DE:"Enabled"}
        Fault    : BOOL;         {DE:"Function fault"}
        ConnPeers: USINT;        {DE:"Number of peers connected"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* -------------------------------------------------------------------------- *)
(* "SysGetIpInfos" function block                                             *)
(* -------------------------------------------------------------------------- *)

FUNCTION_BLOCK SysGetIpInfos

    {DE:"Get IP infos"}

    VAR
        Ver      : USINT := 0;   {DE:"Function block version"}
        IVP      : UDINT;        {DE:"Internal variables pointer"}
    END_VAR

    VAR_INPUT
        File     : FILEP;        {DE:"Pointer to file"}
     END_VAR

    VAR_OUTPUT
        PeerIP   : STRING[15];   {DE:"Peer IP address"}
        PeerPort : UINT;         {DE:"Peer port"}
        Status   : DWORD;        {DE:"Connection status"}
    END_VAR

    { CODE:EMBEDDED }

END_FUNCTION_BLOCK

(* ########################################################################## *)
(* SPY DATA FUNCTION DATA TYPES DEFINITIONS AND FUNCTIONS                     *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* Variable types definition                                                  *)
(* -------------------------------------------------------------------------- *)

VAR_GLOBAL CONSTANT
    {G:"Spy mode definition"}

    SPY_ASCII : USINT := 1;     {DE:"Ascii mode"}
    SPY_ASCHEX: USINT := 10;    {DE:"Ascii with substitute unprintable chars"}
    SPY_BINARY: USINT := 100;   {DE:"Binary mode (From 100 to 180)"}
END_VAR

(* -------------------------------------------------------------------------- *)
(* "SysSpyData" function                                                      *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysSpyData : BOOL

    {DE:"Spy data"}

    VAR_INPUT
        Mode    : USINT;        {DE:"Spy mode"}
        TFlags  : UDINT;        {DE:"Trigger flags"}
        Label   : @USINT;       {DE:"Label pointer"}
        DPtr    : @USINT;       {DE:"Data pointer"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* ########################################################################## *)
(* WEB FUNCTIONS                                                              *)
(* ########################################################################## *)

(* -------------------------------------------------------------------------- *)
(* "SysHttpRegisterHandler" function                                          *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysHttpRegisterHandler : SINT

    {DE:"Http page or action register"}

    VAR_INPUT
        PgAction : @USINT;      {DE:"Page or action"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

(* -------------------------------------------------------------------------- *)
(* "SysHttpGetHandlerFile" function                                          *)
(* -------------------------------------------------------------------------- *)

FUNCTION SysHttpGetHandlerFile : FILEP

    {DE:"Http get handler file pointer"}

    VAR_INPUT
        Hndl : SINT;            {DE:"Handler"}
    END_VAR

    {CODE:EMBEDDED}

END_FUNCTION

]]>
		</target>
		<targetXML name="SensitSTH102.tgtx" fullXml="true">
			<target>
				<resources>
					<resource name="ELS20" processor="ARMv7M">
						<task id="0" name="Fast" type="cyclic" period="1000" descr="Fast task">
							<constraints minPeriod="100" maxPeriod="10000"/>
						</task>
						<task id="1" name="Slow" type="cyclic" period="10000" descr="Slow task">
							<constraints minPeriod="1000" maxPeriod="100000"/>
						</task>
						<task id="2" name="Boot" type="single" period="0" descr="Boot task"/>
						<task id="3" name="Back" period="0" type="cyclic" descr="Background task"/>
					</resource>
				</resources>
			</target>
		</targetXML>
		<libraries/>
		<aux>
			<src fullXml="false" name="HMIsManager.PLC" order="0" hidden="false">
				<![CDATA[]]>
			</src>
		</aux>
		<workspace>
			<root name="SensitSTH102" nextID="28">
				<folder name="POUs" id="1">
					<Pou name="STH102Acquisition" id="15"/>
				</folder>
				<GlobalVars name="Variables" id="9"/>
				<folder name="FBs" id="27">
					<Pou name="ModbusMaster" id="19"/>
				</folder>
			</root>
		</workspace>
	</sources>
	<codegen crossReference="false" crossReferenceOptions="0x3000001D" listing="true" hideSourceCodeInListing="true" saveEXPFile="true" saveTargetFiles="false" warningEnable="true" symMap="true" checkIndexType="false" waitExtension="false" allocateUnusedVariables="false" checkArrayBounds="false" checkDivisionByZero="false" checkPointers="false" checkReferences="false" checkInterfaces="false" customTargetBINFileName="SensitSTH102.bin" customTargetTSCFileName="SensitSTH102_source.bin" customTargetTDSFileName="SensitSTH102_debug.bin" generateCustomFilesName="false">
		<disabledWarnings/>
		<applicationDataBlocks/>
	</codegen>
	<simWorkspaces/>
	<debug watchRefresh="20" watchVarRefresh="0" watchMaxArray="20" autoSaveWatchList="false"/>
	<editor useOldGridSize="false"/>
	<userDef>
		<release>Xtarget</release>
		<author/>
		<note/>
		<version/>
		<password disabled="true"/>
	</userDef>
	<downloadSequence sourceCode="never" debugSymbols="onPLCApplicationDownload"/>
	<commands>
		<postbuild/>
		<postdown/>
		<predown/>
	</commands>
	<resources>
		<configuration template="LogicLab.pct" version="1">
			<data protocol="root">
				<project_config nextID="0">
					<datacomment/>
				</project_config>
				<Mps054_XTarget_20_0 template="Elsist\Plc\Mps054_XTarget_20_0.pct" version="1" name="SlimLine Mps054 XTarget" caption="SlimLine Mps054 XTarget">
					<config>
						<elsist_hmis/>
					</config>
				</Mps054_XTarget_20_0>
			</data>
		</configuration>
	</resources>
</plcProject>